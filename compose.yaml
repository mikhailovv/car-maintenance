
services:
  php:
    build:
      context: docker/php
      dockerfile: ${DOCKERFILE:-Dockerfile}
    container_name: symfony-php
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    environment:
      APP_ENV: dev
      APP_DEBUG: "1"
      DATABASE_URL: "postgresql://vm_user:vm_password@database:5432/vm_dev?serverVersion=16&charset=utf8"
    depends_on:
      - database
  nginx:
    image: nginx:latest
    container_name: symfony-nginx
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vm_dev}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vm_password}
      POSTGRES_USER: ${POSTGRES_USER:-vm_user}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-vm_dev}", "-U", "${POSTGRES_USER:-vm_user}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
  adminer:
    image: adminer
    restart: always
    ports:
      - 8050:8080
    depends_on:
      - database

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
