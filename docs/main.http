POST http://localhost:8000/api/login
Content-Type: application/json

{"email":  "admin@admin.com", "password": "admin"}

> {% client.global.set("auth_token", response.body.token); %}
####
####
POST http://localhost:8000/api/signup
Content-Type: application/json

{"email":  "vmikhailov2015@gmail.com", "password": "admin", "name": "Viacheslav"}


####
GET http://localhost:8000/api/parts/categories/
Content-Type: application/json
Authorization: Bearer {{auth_token}}

####
GET http://localhost:8000/api/cars/brands
Content-Type: application/json
Authorization: Bearer {{auth_token}}

####
GET http://localhost:8000/api/cars/bmw/models
Content-Type: application/json
Authorization: Bearer {{auth_token}}

#### Login as BMW user
POST http://localhost:8000/api/login
Content-Type: application/json

{"email":  "bmw-owner@admin.com", "password": "bmw-owner"}

> {% client.global.set("auth_token", response.body.token); %}
### for mersedes owner user use: "mercedes-owner@admin.com:mercedes-owner"


#### I want to add a new car
POST http://localhost:8000/api/cars
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "name": "my car",
  "brand": "bmw",
  "model": "3-series",
  "vin": "vin number",
  "color": "color",
  "registrationNumber": "320 AAB",
  "producedAt": "19.04.2023"
}

### I want to see all cars
GET http://localhost:8000/api/cars
Content-Type: application/json
Authorization: Bearer {{auth_token}}

###  I want to create a new service
POST http://localhost:8000/api/services
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
    "name": "oil change",
    "currency": "EUR",
    "car_id": "01948df9-8d86-73ce-bb49-779cde4d83c6",
    "unit_price": 23.34,
    "quantity": 0.95,
    "mileage": 18300
}

##### I want to see exists services
GET http://localhost:8000/api/services?car_id=01948df9-8d86-73ce-bb49-779cddd6924d
Content-Type: application/json
Authorization: Bearer {{auth_token}}

##### I want to see exists services
GET http://localhost:8000/api/services?car_id=01948df9-8d86-73ce-bb49-779cde4d83c6
Content-Type: application/json
Authorization: Bearer {{auth_token}}

#### I want to see part categories
GET http://localhost:8000/api/parts/categories/
Content-Type: application/json
Authorization: Bearer {{auth_token}}

#### I want to add a new part
POST http://localhost:8000/api/parts
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
    "part_number": "123456",
    "original_part_number": "123456",
    "brand": "bmw",
    "name": "oil filter",
    "category_id": 65,
    "unit_price": 12.34,
    "currency": "EUR",
    "quantity": 1
}
#### I want to see exists parts
GET http://localhost:8000/api/parts
Content-Type: application/json
Authorization: Bearer {{auth_token}}


###### I want to add parts to service
POST http://localhost:8000/api/services/01944076-5930-71ee-a54a-72f59edb2ae8/parts
Content-Type: application/json
Authorization: Bearer {{auth_token}}

[{
    "part_id": "01944077-577e-7140-9e02-52335b863ec7",
    "quantity": 1
}]
####

Purchase
    id
    item_type
    item_id
    quantity
    unit_price
    shop
    created_at



//
// Car
// -> buy part for car
// -> buy service for car
// -> link part with service


// Choose car
//  -> add part
//     -> part number, original part number, brand, name, category, price, currency, quantity, shop, created_at
//  -> add service
//     -> service name, price, currency, shop, created_at
//     -> add part to service
//        -> part number, original part number, brand, name, category, price, currency, quantity, shop, created_at
//     -> choose existing part


// Part   -> (add part) -> Part status = "stock"
// Service -> (add part) -> Part status = "installed"
// Service -> (choose existing part) -> Part status = "installed"
#####
GET http://localhost:8000/api/cars
Accept: */*
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-GB,en-US;q=0.9,en;q=0.8,ru;q=0.7
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJibXctb3duZXJAYWRtaW4uY29tIiwiaWF0IjoxNzM2MjY2NzQ4LCJleHAiOjE3MzYzNTMxNDh9.Geg907Xf8Cd0e1EqPHc-eThG2KjDL6Zf_O3bu4wu_M8
Cache-Control: no-cache
Connection: keep-alive
Content-Type: application/json
Host: localhost:8000
Origin: http://localhost:3000
Pragma: no-cache
Referer: http://localhost:3000/
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-site
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36
sec-ch-ua: "Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "macOS"

